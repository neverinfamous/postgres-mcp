# act -W ../.github/workflows/docker-build-dockerhub.yml -s DOCKERHUB_USERNAME -s DOCKERHUB_TOKEN -s GITHUB_TOKEN="$(gh auth token)"
---
name: Build and Push Docker Image to DockerHub

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (without v prefix)"
        required: true
        default: ""

# Security: Explicit permissions following principle of least privilege
permissions:
  contents: read

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.VERSION }}
    steps:
      - name: Set version from tag
        id: set-version
        run: |
          if [[ "${{ github.event_name }}" == "push" && \
                "${{ github.ref_type }}" == "tag" ]]; then
            VERSION="${GITHUB_REF#refs/tags/v}"
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

  build-and-push:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:latest

      - name: Inspect builder
        run: |
          echo "Available platforms: $(docker buildx inspect --bootstrap | grep 'Platforms:')"
          docker buildx ls

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64
          image: tonistiigi/binfmt:latest

      - name: Prepare Docker tags
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: writenotenow/postgres-mcp-enhanced
          tags: |
            type=raw,value=${{ needs.prepare.outputs.version }}
            type=raw,value=latest

      - name: Check directory structure
        run: |
          echo "check pwd: $(pwd)"
          echo "check ls: $(ls -lta)"

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: build-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=registry,ref=writenotenow/postgres-mcp-enhanced:buildcache
          cache-to: type=registry,ref=writenotenow/postgres-mcp-enhanced:buildcache,mode=max
          # Security: Enable build attestations for supply chain security
          provenance: true
          sbom: true
          # Enable reproducible builds
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=Enterprise PostgreSQL MCP Server
      
      - name: Docker Scout Analysis
        uses: docker/scout-action@v1
        if: github.event_name == 'push'
        with:
          command: cves,recommendations
          image: writenotenow/postgres-mcp-enhanced:${{ needs.prepare.outputs.version }}
          only-severities: critical,high
          exit-code: false
          write-comment: true
      
      - name: Docker Scout Compare
        uses: docker/scout-action@v1
        if: github.event_name == 'push'
        with:
          command: compare
          image: writenotenow/postgres-mcp-enhanced:${{ needs.prepare.outputs.version }}
          to: writenotenow/postgres-mcp-enhanced:latest
          exit-code: false
